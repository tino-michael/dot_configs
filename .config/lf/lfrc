set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

set shell zsh
set shellopts '-euy'
set ifs "\n"
set icons
set dircounts
set info size

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*|inode/*) nvim $f ;;
        image/*) gwenview $f ;;
        audio/*) mpv --audio-display=no $f ;;
        video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
        application/pdf|application/epub*) setsid -f okular $f >/dev/null 2>&1 ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}


cmd delete ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "delete? [y/N]"
    read ans
    if [ $ans = "y" ]; then
        for x in $fx; do
            rm -rf -- "$x"
        done
    fi
}}


# use rsync to show progress while copying
cmd paste &{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    case "$mode" in
        copy)
            rsync -av --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}



# d (select for cut) and P to paste hard-link
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}
map P :link



# print current working directory as window title
cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0; $(pwd | sed "s|$HOME|~|")/ - lf\007" > /dev/tty
}}

# also run at startup
on-cd


map D delete
map <f-2> rename
map <f-10> push :mkdir<space>
map <c-n> push :mkdir<space>
map . set hidden!
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
# put lf in background with usual ctrl+z
map <c-z> $ kill -STOP $PPID
