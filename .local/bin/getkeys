#!/bin/sh

# This script shows you a list of keyboard shortcuts for your favourite programmes.
# Call it without arguments and a dmenu will show so you can select your desired programme.
# You can either run it from a terminal or trigger it with a keyboard shortcut.
# If you run it from a terminal, the shortcut list will be printed back onto the terminal.
# If you call it with a system shortcut, the resulting list will be piped into another dmenu
# making the list nicely searchable.
# You can also call it with the name of the programme you want to look up as first argument
# and immediately get the resulting shortcut list.
# The files with the shortcuts are looked up in `${XDG_DATA_HOME}/keys`, one file per
# programme with the name of the programme as the name of the file.

ask_keys ()
{
    ls "${XDG_DATA_HOME}/keys" | dmenu -i -p "Select Programme"
}

show_keys ()
{
    [ "$1" = "" ] && exit 0

    FILE="${XDG_DATA_HOME}/keys/$1"

    PPID=$(grep "^PPid" "/proc/$$/status" | cut -f 2)
    ppid_name=$(grep "^Name" "/proc/$PPID/status" | cut -f 2)

    # if the parent's name is a shell, i.e. ends in "sh" (sh, zsh, dash, bash, fish ...),
    # simply paste the file content; otherwise pipe it into a `dmenu`
    case "$ppid_name" in
        *sh)
            cat $FILE;;
        *) $(cat $FILE | dmenu -i -p "$1 keys");;
    esac
}

show_keys "${@:-$(ask_keys)}"
