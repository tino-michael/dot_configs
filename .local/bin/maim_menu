#!/bin/sh

# wrapper script for various functionalities of the maim screenshot tool
# separate functions heavily inspired by the examples on maim github readme:
# https://github.com/naelstrof/maim

EXT=png
QUAL="-m 8"
DEST="$HOME/Pictures/Screenshots"

mkdir -p $DEST

# select an area on the screen, averages the colour of the selection and
# copies the rgba value into the clipboard
colour_picker ()
{
    maim -st 0 |
    convert - -resize 1x1\! -format '%[pixel:p{0,0}]' info:- |
    xclip -selection clipboard
}

# take a screenshot of the full screen and save it in home
fullscreen ()
{
    maim -u "$DEST/screenshot_fullscreen-$(date '+%y-%m-%d_%H-%M-%S').$EXT" $QUAL
}

# take a screenshot of the active window and save it in home
active_window ()
{
    maim -ui $(xdotool getactivewindow) "$DEST/screenshot_window-$(date '+%y-%m-%d_%H-%M-%S').$EXT" $QUAL
}

# select an area on the screen and save it in home
select_region ()
{
    maim -us "$DEST/screenshot_region-$(date '+%y-%m-%d_%H-%M-%S').$EXT" $QUAL
}



# opens a dmenu dialog for which mode to run
ask()
{
    printf "fullscreen\\nactive window\\nselect region\\ncolour picker" |
    dmenu -i -p "Select screenshot style"
}

# given the selected mode as argument, run the corresponding function
pick()
{
    case "$@" in
        fullscreen) fullscreen;;
        "active window") active_window;;
        "select region") select_region;;
        "colour picker") colour_picker;;
    esac
}

# use either the CLI arguments or open a dmenu and ask for the mode to run in
pick "${@:-$(ask)}"
